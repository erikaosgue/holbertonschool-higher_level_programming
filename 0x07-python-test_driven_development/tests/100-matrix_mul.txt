=============================================
Testing the function multiplies two matrices
100->>> matrix_mul

=============================================

::
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

#test_1
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

#test_2
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

#test_3
>>> matrix_mul([[1, 2, 3]], [[1, 2, 3], [4,5, 6], [7, 8, 9]])
[[30, 36, 42]]

#test_4
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1], [2], [3]])
[[14], [32]]

#test_5
>>> matrix_mul([[1, 2, 3]], [[1], [2]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied


#test_6
>>> matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

#test_7
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

#test_8
>>> matrix_mul([[1, [1, 2], 3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

#test_9
>>> matrix_mul([[1, 2]], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

#test_10
>>> matrix_mul([[1, 2], [3,'$']], [[1, 2]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

#test_11
>>> matrix_mul([[1, 2], [3,6]], [[1, "1"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

#test_12
>>> matrix_mul([[1, 2], [3, 6, 7]], [[1, 2]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

#test_13
>>> matrix_mul([[1, 2], [3, 6]], [[1, 2], [1]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size



